openapi: '3.0.3'
info:
  description: Task Management Api Documentation
  version: '1.0'
  title: Api Documentation
servers:
  - url: 'http://localhost:9090/api'
tags:
  - name: Task-end-point
    description: Manage tasks
paths:
  /tasks:
    get:
      tags:
        - Task-end-point
      summary: Retrieve a list of all tasks
      operationId: getTasks
      responses:
        '200':
          description: List of tasks retrieved successfully
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
    post:
      tags:
        - Task-end-point
      summary: Add a new task
      operationId: addTask
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: Task created successfully
          headers:
            Location:
              description: URL of the created task
              schema:
                type: string
                format: uri
        '400':
          description: Bad request
  /tasks/tags/{tag_name}:
    get:
      tags:
        - Task-end-point
      summary: Retrieve a list of all tasks by tag name
      operationId: getTasksByTagName
      parameters:
        - name: tag_name
          in: path
          required: true
          description: The name of the tag
          schema:
            type: string
      responses:
        '200':
          description: List of tasks retrieved successfully
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
        '404':
          description: Tag not found
  /tasks/{task_id}:
    get:
      tags:
        - Task-end-point
      summary: Retrieve a task by ID
      operationId: getTask
      parameters:
        - name: task_id
          in: path
          required: true
          description: The ID of the task
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '404':
          description: Task not found
    patch:
      tags:
        - Task-end-point
      summary: Update a task
      parameters:
        - name: task_id
          in: path
          required: true
          description: The ID of the task
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '204':
          description: Task updated successfully
        '404':
          description: Task not found
        '400':
          description: Bad request
  /tasks/{task_id}/assign:
    put:
      tags:
        - Task-end-point
      summary: Assign a user to a task
      parameters:
        - name: task_id
          in: path
          required: true
          description: The ID of the task
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the user
      responses:
        '204':
          description: User assigned successfully
        '404':
          description: Task or user not found
        '400':
          description: Bad request
  /tasks/{task_id}/tags:
    put:
      tags:
        - Task-end-point
      summary: Add tags to a task
      parameters:
        - name: task_id
          in: path
          required: true
          description: The ID of the task
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '204':
          description: Tags added successfully
        '404':
          description: Task not found
        '400':
          description: Bad request
  /users:
    get:
      tags:
        - User-end-point
      summary: Retrieve a list of all users
      operationId: getUsers
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - User-end-point
      summary: Add a new user
      operationId: addUser
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          headers:
            Location:
              description: URL of the created user
              schema:
                type: string
                format: uri
        '400':
          description: Bad request
        '409':
          description: User already exists
  /users/{user_id}:
    get:
      tags:
        - User-end-point
      summary: Retrieve a user by ID
      operationId: getUser
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '404':
          description: User not found
    patch:
      tags:
        - User-end-point
      summary: Update a user
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: User updated successfully
        '404':
          description: User not found
        '400':
          description: Bad request
    put:
      summary: Replace a user
      tags:
        - User-end-point
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
        '204':
          description: User replaced successfully
        '400':
          description: Bad request
  /users/{user_id}/tasks:
    get:
      tags:
        - User-end-point
      summary: Retrieve a list of all tasks assigned to a user
      operationId: getUserTasks
      parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of tasks retrieved successfully
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
        '404':
          description: User not found
        '400':
          description: Bad request

components:
  schemas:
    TaskResponse:
      description: Task object when sent as a response by the API
      type: object
      properties:
        id:
          type: integer
          description: The ID of the task
        name:
          type: string
          description: The name of the task
        description:
          type: string
          description: A brief description of the task
        due_date:
          type: string
          format: date-time
          description: The due date for the task
        user_id:
          type: integer
          description: The ID of the user assigned to the task
    TaskRequest:
      description: Task object when received in a body of a request
      type: object
      properties:
        name:
          type: string
          description: The name of the task
        description:
          type: string
          description: A brief description of the task
        due_date:
          type: string
          format: date-time
          description: The due date for the task
        user_id:
          type: integer
          description: The ID of the user assigned to the task
    User:
      type: object
      description: User object
      properties:
        id:
          type: integer
          description: The id of the user
        name:
          type: string
          description: The name of the user
    Tag:
      type: object
      description: Tag object
      properties:
        name:
          type: string
          description: The name of the tag
        description:
          type: string
          description: A brief description of the tag